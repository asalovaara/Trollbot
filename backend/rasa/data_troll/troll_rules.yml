version: "2.0"

rules:

# FALLBACK RULES
# NOTE: All rules require a condition (a slot_was_set check)
# Therefore rules are divided have multiple versions for occurring in different phases of the conversation, if no more specific conditions can be defined.

# NLU fallbacks are intents that are not clear enough.
# Threshold is set in config.yml pipeline by adjusting the FallbackClassifier's threshold value.
# The bot is set to not respond (= to perform action_listen) to prevent misunderstanding user intent.

- rule: NLU fallback during introductions
  condition:
  - slot_was_set:
    - task_activated: false
  steps:
  - intent: nlu_fallback
  - action: action_listen

- rule: NLU fallback during task
  condition:
  - slot_was_set:
    - task_activated: true
  steps:
  - intent: nlu_fallback
  - action: action_listen

# Keysmash is an intent defined in the nlu files.
# As the keysmash is a way to convey a large variety of emotions or perhaps simply an accident,
# the bot is set to not respond (= to perform action_listen) to prevent misunderstanding user intent.

- rule: Keysmash fallback during introductions
  condition:
  - slot_was_set:
    - task_activated: false
  steps:
  - intent: keysmash
  - action: action_listen

- rule: Keysmash fallback during task
  condition:
  - slot_was_set:
    - task_activated: true
  steps:
  - intent: keysmash
  - action: action_listen

# GENERAL CONVERSATION RULES

- rule: user is confused
  condition:
  - slot_was_set:
    - task_activated: true
  steps:
  - intent: confusion
  - action: action_listen

# TEMPORARY DEVELOPMENT RULES FOR DEBUGGING

- rule: get genre data
  condition:
  - slot_was_set:
    - task_activated: true
    - genre: filled
  steps: 
  - intent: get_genre
  - action: utter_genre

- rule: Restart conversation at will
  condition:
  - slot_was_set:
    - task_activated: True
  steps:
  - intent: restart_conversation
  - action: action_end_conversation