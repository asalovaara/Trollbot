# This file contains the different endpoints your bot can use.

# Server where the models are pulled from.
# https://rasa.com/docs/rasa/model-storage#fetching-models-from-a-server

#models:
#  url: http://my-server.com/models/default_core@latest
#  wait_time_between_pulls:  10   # [optional](default: 100)

# Server which runs your custom actions.
# https://rasa.com/docs/rasa/custom-actions

action_endpoint:
 url: ${ACTION_ENDPOINT_URL}

# Tracker store which is used to store the conversations.
# By default the conversations are stored in memory.
# https://rasa.com/docs/rasa/tracker-stores

tracker_store:
  type: mongod
  url: ${MONGODB_URI}
  db: ${MONGODB_DB_NAME}
  username: ${MONGODB_USERNAME}
  password: ${MONGODB_PASSWORD}

# UNCOMMENT TO ACTIVATE TRACKER STORE (requires locally run mongodb, see backend README)
# tracker_store:
#   type: mongod
#   url: mongodb://localhost:27017
#   db: rasalogs
#   username:
#   password:

# stuff to add to readme if needed 

# to run mongo database:
# C://Program Files/MongoDB/Server/4.4/bin/mongod.exe

# to connect rasa to mongo database:
# rasa run --enable-api --endpoints endpoints.yml --cors "*"

# to export db data to CSV file (requires mongo db tools installed, file is created in current directory):
# mongoexport --host localhost:27017 --db rasalogs --collection conversations --type=csv --out=csvlog.csv --fields events

# to export db data to JSON file (requires mongo db tools installed, file is created in current directory):
# mongoexport --host localhost:27017 --db rasalogs --collection conversations --out=jsonlog.json

# Event broker which all conversation events should be streamed to.
# https://rasa.com/docs/rasa/event-brokers

#event_broker:
#  url: localhost
#  username: username
#  password: password
#  queue: queue
